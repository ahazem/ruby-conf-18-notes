Please stand by for real time captions. 
>> 

>>> Good morning! Good morning, RubyConf. How are we doing?  All right, so as you all come in, or maybe actually as you are seated. As you come in, we don't have a lot of extra chairs, so if you see a chair in the middle, if you raise a hand or if you slide in, whichever is going to be easier. The police, if people are coming in, let -- open seats. -- But please, if people are coming in, open seats. They are beckoning you to come sit next to them. Please, sit next to me! It's okay if you're not going to sit with your buddy because you will have plenty of opportunities for that around the conference. Do I have a little bit of a -- the podium once my laptop to slide off, which is not the greatest feeling. [ Laughter ] to have. So first of all, I want to thank Beth Harbert. She was playing piano for us over there, so thank you, Beth, for treating us to that. We still have got open seats. As you come in, people raise their hands where seats are. This is a really, real -- really cool place for someone who is ever been to L.A. for Rubicon -- RubyConf. We have been in a lot of cities over the years. This is number 19 .  This is RubyConf 19 , just for those of you who started at the one in Tampa Bay. Yeah, so the Biltmore is very cool. This is probably the coolest venue we've ever been here. I'm sorry, I don't have any slides with slime or Ghostbusters stuff. 
>> [ Laughter ] 
>> All right, let's get to business. So first important slide here, Wi-Fi. You probably have Artie figured out. If you have not, that is the information. We have told after 20 minutes of -- already figured out. If you have not, that is the information. We have told after 20 minutes of inactivity it's going to cut you off, so just If you have not, that is the information. We have told after 20 minutes of inactivity it's going to cut you off, so just  be aware of that. Like I do not know, browse the Internet or something. Just FYI, so kind of a challenge for you. So, offering a purple shirt. There is staff in the back. I would walk around except I'm worried my laptop is going to slide off, so I will stay right here. So questions, concerns, anything? Back folks in the shirt can help you out. We can get an answer for you. If they don't know, they will find someone who does. All right, on-demand trivia. Okay, so we have childcare. Did I miss a slide? No, I did not. Childcare. We have childcare. We usually have children. 
>> [ Laughter ] 
>> All the stuff we planned well in advance, and we do this -- we've done this several years now, and usually we have kids in our childcare room, and this time we do not. They said please, please! We will look after your pets. They are [ Indiscernible ] which is the main level where the sponsor Galleria is. There is a stairwell going up, that is where you will find that. You will also find a lactation room, gender-neutral bathrooms there, so maybe if you have a pet here that is lowly -- lonely, you don't want to leave it in the room, there you go. Also, this year we have pronoun buttons, so that is cool. You can get that and put it on your lanyard. I recommend I saw people were putting it on their shirts yesterday. Do not do that because you will ruin your shirt putting holes in it, but if you put it on your lanyard it is easy. Code of contact -- conduct. We had one for many, many years, and please go read, look it over. I may spend a little bit of time on this, little more than in the past. If there is a situation or something you are concerned about, please report it. Obvious AA bullying, that is pretty clear. -- Obviously bullying, that is pretty clear. But there is also a lot of more nuanced, gray areas that will make someone feel unwelcome or uncomfortable, and certainly if this is happening please communicate that you would like that behavior to stop, and if you feel uncomfortable that could be something as simple as, you know, a bad joke or sort of offensive remark or whatnot. Please don't do that. You might not be aware and may not realize when you're making someone feel uncomfortable. We all make mistakes. It is okay, but if someone lets you know that, please apologize, change your behavior. To let us know about this, not that we are going to throw anyone out right away, but we want to know when things are happening and make sure you feel welcome and included. So that is the code of conduct. Again, if you have questions or concerns, purple shirts! All right, Ruby friends, who is our Ruby friends? That's good, but that's not enough. I need a volunteer to help me with this. All right, so we are going to describe Ruby friends, what it is. 
>> Hi, I'm great! 
>> What is your name? Thomas Marty. 
>> I'm Ernie. Would you like to be my Ruby friend? 
>> I would like to be your Ruby friend! 
>> Then we are going to take a picture, a selfie. 
>> Do you want to put your phone on here? It will slide off. 
>> I'm good with that. 
>> All right. 
>> [ Laughter ] 
>> So he is going to tweet this. He tweeted with the #RubyFrance. We've been doing this on and off. Make new friends, and tried to -- #RubyFriends. We've been doing this on and off. Make new friends, and tried to introduce yourself to five new this on and off. Make new friends, and tried to introduce yourself to five new  people every day. That's going to be really really easy. If you think that is too easy, stretch it to 15, I don't know, and post your progress to the Internet. That would be great. If you feel comfortable, I can give you some easy icebreakers and things.  Say hey, is this your first RubyConf? What is your favorite session so far? What are you looking forward to doing?  These are all easy things everyone would have an answer for, so there you have it. Okay, lunch. So lunch is in the regency room. It is downstairs, so you found your way here. It is back downstairs. That is where your lunch is. You must have your batch to have food, so please bring your food. -- Badge. You have stickers if you have special dietary restrictions. That is on your bad. -- Badge. Also, we are going to have T-shirts available every day at lunch, so that is where you get your T-shirts. In the past, we waited for the end of the conference. You can get it today, and you can wear it. Again, if you've got questions or concerns please speak up. Let's talk about who we are. For those of you who don't know, we are Ruby Central. We are a nonprofit organization that runs  RubyConf . Also fun fact, we also run the gems infrastructure so when you are on RubyGems infrastructure. That helps pay for all of that, so thank you for  buying a ticket and coming, and thank you to all of our sponsors for their support. 
>> [ Applause ] So Ruby's potential has three directors, we've had many directors over the years -- many directors. Evan Phoenix,  Sarah Mei,  and Marty Haught.  That is our website if you want to go. This event takes a lot of effort, and I am the program chair so I did do part of it with them, but I do not do all the work by myself because that would be insane. And we have a program committee, and these are the lucky, wonderful people who have helped us out with this year's program, so thank you so much. We have Akira Matsuda, Ernie Miller,  Jameson Hampton, Megan Tiu, Sam Phippen,  and Valerie Woolard Srinivasan.  So, thank you. 
>> [ Applause ] 
>> [ Laughter ] so I'm curious, how many of you are here for the first time at RubyConf? That's most of you. That's a lot. Welcome! I'm going to do more before we welcome and  Matz, by the way.  So here are the elements we have in our program. We are going to talk about the keynotes, so keynotes happen here. -- Here in the Biltmore bowl. The keynotes are the bookends of the day, so the start and end of the day, and we also have the post lunch query sessions in here, and they are at -- some fun things we do at Ruby -- rubyconf.org one  -- RubyConf.  This is being recorded by con freak so all the content will be available after the fact, we have live stream and you can see live caption or which is at the bottom of the screen, which is the first time we've done live captioning. So for the live stream, this is the information. You go to the events page. It is kind of funny because you are all here. So, there you have it. That is your information. Yeah, life captioning, so that's only going to be in the Biltmore bowl or crystal ballroom. The URL is available. It is one that we will be tweeting out and ask for if you don't have it. Like magic, there is life captioning -- a live captioning link, so if you want to see the caption on your device, there you go. You use it for that purpose. Thank you. The primary thing you're thinking about when it comes to RubyConf, these are the sessions . You probably seen on our section board. Each program committee member took one theme. You might want to pick one of those and go to all those sessions. They are great, so these are also being recorded by Confreaks yes you will not be able to see all the things you want to do -- see. That is just the nature of the beast. And you could always watch the videos after the fact, so if you miss something no big deal. Talk about birds of a feather. These are during lunch, or they are in the lunch room, and they are Wednesday and Thursday afternoon. They are open discussion groups where you can pick a topic, you will sorta block off part of the time on our board near the registration. If you want to talk about J Ruby or TB or something, it is whatever topic interests you and others, and you can sign up for a spot, and you will meet at the table in the lunchroom at the assigned time, and have the greatest -- great -- discussion, so look at the board as people fill it out. If you have ideas and you're talking to some of the people here and you want to have a broader conversation with other attendees, this is a great opportunity for that, so please take advantage of that. All right, lightning talks. Lightning talks, they are on Wednesday afternoon. They are five minutes or shorter presentations that you do on any topic of interest to you with some limitations. There is a sign-up board that will be made available tomorrow morning and registration, and they go fast so if you really want to give a lightning talk you will want to not delay on that, and we don't -- we never have time for all of them so there is only so much time we have live -- Allied for it and there is so much interest. -- Assigned for it, and there is so much interest. And finally, we are going to talk about the hallway track. It is not an actual track. It is the hallway track, and that's actually the thing I like the most. This is sort of informal conversation that people are having out on the hallways between sessions, and if you're not being part of this you really should. This is of course part of your Ruby challenge where you are chatting and meeting new people. There's a lot of great folks here, and you should take advantage of having these conversations. Networking. All right, again the sponsors. We have so many sponsors this year. So appreciative of all these sponsors that have come to support the conference. I think this is the most sponsors we never had in memory. First of all is diamond level sponsors, it is vastly and Weedmaps. We have Heroku, Cheka, LiveRamp, Engine Yard, and NationBuilder. For gold sponsors, we have Cyndx, Datadog, Braintree, square, Coupa, Cookpad and Twilio. Silver sponsors we have Opendoor and Rootstrap. For bronze sponsors we have mowed, fair, and CodigoDelSur. We also have other sponsors that sponsored various other things like strip sponsored childcare, and ActBlue I believe sponsored travel for scholars is memory is correct. They also have other things they sponsor at the conference, so thank you so much. 
>> [ Applause ] And finally parties. So we have a party states that you can see what, what is going on after the event. Tonight at 5:45, NationBuilder's is hosting a party. It is in the Biltmore. There will be people, a NationBuilder staff that will direct you to a space, and so certainly after the keynote tonight look for that. I do know that with the event, they would like you to RSVP to know how many people to expect, but if you have a bad you can just get in. That is what I understand. Questions, concerns? See where to find us, and we can answer any questions you might have. And with that, we will have Matz up.  
>> [ Applause ] Okay. [ Laughter ] I don't know why. Probably because this is a very great venue. This was the city I was in -- I saw over and over in the Hollywood movies. 
>> [ Laughter ] 
>> And well, when I speak in English I feel like I am 30% less intelligent. 
>> [ Laughter ] 
>> You don't understand because you don't speak Japanese, right? In the year 1993, I started developing Ruby. [ Indiscernible ] I had no ambition. [ Laughter ] to take over the world or anything. 
>> [ Laughter ] 
>> Or I did not try to make any money out of it. I just created [ Indiscernible ] language for fun because as soon as I started programming, I was interested in programming languages because, you know, back then, you know, programming languages is called basic, which is pretty much basic. 
>> [ Laughter ] 
>> And then, you know, the basic ability [ Indiscernible ]. The basic language was pretty, you know, limited. And then I did not know any other programming language, so I did not the reason, but I felt so frustrated because of that limitation of the language. And then, I find a book explaining the language, and then I did not have a computer to execute the [ Indiscernible ] because back then those PCs came with the basic interpreter, so we would have to buy an assistant and a compiler to execute, or C compiler. Oh, these compilers cost, I don't know, $2000 or something? So it is too expensive for a high school student. [ Laughter ] 
>> [ Laughter ] 
>> So, so I just went through the book, and I learned many things like DOS structure programming and user defining data structure. It is called [ Indiscernible ]. These are the defined functions. Those ideas of pretty much [ Indiscernible ] for me. And then, I -- you know, back then I was pretty much interested in programming, computers, programming languages, and along with child psychology, so I'm interested in how the human mind can be expressed. So programming languages is, you know, is a form of expressing our ideas, right? So that, I think that is one of the reasons I got interested in programming languages, so I read research about the -- at the local bookstore, the library, then I graduated from high school and went to university, majored in business science, and gosh. The university library had tons of books and papers on programming language, so I studied about programming language, and I found out these programming language designs -- designs by intention so that we did not know who invented English, right? Or no Chinese, Japanese, natural language. But every primitive language has its inventor or designer, and these languages are designed by intention so that, for example, the [ Indiscernible ] was designed to be educational programming language, and the C programming language is a language to replace assembly to implement up -- upper writing systems, so those getting language designs by clear intention, by human beings -- programming languages were designed by clear intention, by human beings. It was my teenage dream, so these programming languages are designed by people, so why not me? 
>> [ Applause ] 
>> Yeah, it occurred to my teenage brain, but remember it was, it was the 80s. We did not have Internet. [ Laughter ] 
>> [ Laughter ] 
>> There was no way to Google about the implementation for the compiler or anything, so I got the books for my local bookstore. I lived near, next to a bookstore so I went to a bookstore -- the bookstore and took the book compiler and then I read. It was a textured -- textbook for a community -- University class, but it was too difficult for a hay school student. I entered university, majored in -- high school student. I entered university, I entered university, majored in computer science, and from the school, then I worked  as a professional programmer for several years, and then finally I thought I got enough skill to implement my own programming language, and it was 93. But then, for my programming language, one because, you know, [ Indiscernible ]. [ Laughter ] but that programming language for more than two years, and I felt okay, this programming language got realistic and usable. Okay, I -- it is about the time to create it on the Internet. So operation on the Internet, so soon after that I formed the mailing list. 
>> [ Laughter ] 
>> It used to be we used the mail to communicate among the community because we didn't, we didn't have the World Wide Web. Yeah, actually the World Wide Web was invented in 1990, so there was an Internet, but it is not for, you know, the general public. So I did not use the Internet, so I formed a mailing list, and soon after I formed the mailing list 200 people joined that mailing list. You know, communication was formed by that 200. By this community, many people tried to ask me, report bugs and gave me suggestions on anything, so that is how the community movement had started. Actually, we called it open soft because it is 95. The term open soft was invented in 97 De Beque 98 I mean, 98, so it was older than that, so we called them free software. Right? 
>> [ Laughter ]. 
>> Remember the Y2K thing? 
>> [ Laughter ] Thomas at December 31st, 1999, I got in the mail, the email from the publisher that [ Indiscernible ], and they wanted to publish a book about my programming language, Ruby. I said okay. I wrote the book in Japanese, but it is quite difficult for me to write them or translate it into English so that if someone wrote book so me, for my programming language, it is more than welcome. So I agreed on that date, December 31st, 1999. So we did not have any big team that they. In the year 2000, the book was published, so the team of two called the programmer programmers, they wrote the book. -- Book inexpensively, so it took them eight months to read the whole book. I don't know, 400 pages, and it was a very thick book. And then we had peacocks on the front page, so we called it the peacocks book. First the book was published, and then they sold the 20,000 copies of the first version of the Peacock book. 20,000. It's quite a number. Not that big, considering that back then Ruby is, you know, virtually nobody knows Ruby back then. So that, you know, so 20,000 copies, it's a light number. I estimated that Ruby users back then is 10,000 or something. You know, not everybody who bought the book uses Ruby, I guess. 
>> [ Laughter ] 
>> I guess. [ Laughter ] year 2001, next year,  we had the first RubyConf, this conference,  --. the first one was held in Tampa Florida -- Tampa, Florida. Before that, the attendees was -- okay, we had -- have so many RubyConf  attendees here, probably 800. We had the first Ruby conference, we had 34 attendees. [ Laughter ] 
>> [ Laughter ] 
>> Okay, this year we had a Ruby conference in Sendai, in Japan, and we had 1000 attendees there. In this conference, 800, and there are some people estimating the current Ruby number of Ruby users is over 1 million. 
>> [ Applause ] 
>> Actually Ruby, there is no way to count the actual number of users, but from the traffic of Internet and the sales of the books or something, and some people estimated the number. 12 100. That is the number. Ruby became popular. Ruby is used everywhere. Especially and web feel. A small product that used Ruby, and big companies like Twitter, Netflix, air B&B co-use Ruby, and if they use Ruby -- Airbnb use Ruby, and they use Ruby. Ruby is using [ Indiscernible ]. And some will -- Ruby -- S&S you Ruby. The Ruby is also used in every day, for example or in other -- some other game. [ Laughter ] for some reason. 
>> [ Laughter ] 
>> We call the Siebel community. -- Those people community. The software relies heavily on community. By the way, what is a community? A group of people like sitting up in the front here, or the state of Kim -- California, or the United States of America? That is a community, but this community is not really like that. There is not many groups of this people. [ Indiscernible ] unlike real communities, we have more regulation of the Ruby community, so we have an initiation to enter into the Ruby community? No, we have no vote. We have no mayor. 
>> [ Laughter ] 
>> So that the community is virtually nonexistent, so we cannot touch it. So you are the community, and at the same time you are not really the community because, you know, there Ruby community is not exclusive. Everybody use JavaScript here. 
>> [ Laughter ] Thomas so you are part of the JavaScript community. That's okay. It is not exclusive. [ Laughter ] 
>> [ Laughter ] 
>> We are not exclusive. So the Suffolk community is -- software community is not as structured as others. You know, when [ Indiscernible ] we see rain, we see winds, we see a little blizzard. And then we can understand the movement of our mobility, but TV says it's okay.-Is coming, so beware of a typhoon, be aware or something like that. The typhoon's main structure is like wind and rain and cloud and something like that, and we cannot touch or move or even delete the typhoon. -- A typhoon Is coming, so beware of a typhoon, be aware or something like that. The typhoon's main structure is like wind and rain and cloud and something like that, and we cannot touch or move or even delete the typhoon. the structure comes with a very of a typhoon, be aware or something like that. The typhoon's main structure is like wind and rain and cloud and something like that, and we cannot touch or move or even delete the typhoon. the structure comes with a very  huge power. Okay, the Ruby community is kind of like that. We see you, you, you so you are part of the Ruby community, but then you cannot be representative of the Ruby community. You are part of the Ruby community. I often consider -- I am often considered the leader of the Ruby community. Actually, I am not. I am just a part of the Ruby community. But Ruby heavily relies on the community, so we got many reports from the community. I remember. I told you about the forming of the mailing list back in 1995, and the first male in the mailing list was -- mail in the mailing list was from my friend. Congrats on forming the mailing list. 
>> [ Laughter ]. A good friend. Okay. The second mail, by the way I cannot compile your Ruby program. 
>> [ Laughter ] 
>> The third mail was from me. Okay, I fixed it. Thank you. 
>> [ Laughter ] 
>> And the fourth mail is okay, I found another bug. 
>> [ Laughter ] 
>> Then I fixed it, report, fix it. That is the key, report. Okay, we got tons of bad reports in the history of Ruby. Actually, I don't consider myself a genius programmer, but you know, I think I am very good at designing language. I don't consider myself as a great programmer, so I created so much -- many bugs. And in the past we got so many requests and proposals in the history, but software support was introduced, propose from the community [ Indiscernible ] as a -- an issue from the community. Discussion of the future types and the compiler and the support. These are from the community, it is not from me. So I get proposals. I consider it a lot, and I made a final decision. But still, I was not the one who invented or who came up -- to come up with those ideas. And I am not really good at a document writer. Many people contribute by making Ruby documents better, and they form the meet ups, they wrote books, they organized the conferences, they implemented the framework so that we owe much to the community. So the big so -- biggest one I think is the interest and curiosity. So we like puzzles like sudoku or something like that, so designing or fixing or improving the language is kind of similar things. Open-source activities often is driven by interest or curiosity, or maybe by someone's recommendation about contribution to the community, or maybe some people like communication. You know, the communication between the, you know, similar personalities is kind of fun and amazing. We will make friends. It's pretty much fun. Having a conversation with a stranger with similar interests is quite amusing, quite interesting. And then some people work for money. Yes, that is important. Some people work for responsibility. So often community does not have uniform mindset. We are all different, but that's okay. As I said, communities like that form so that this molecule and that molecule has different movements, but the community is kind of like that. So Ruby used to be a one person project, a 200 mailing list member, and 20,000 copies of the first English book, and a conference all over the world so the community has grown. Ruby increase in power, and I believe Ruby has the best open-source communities because of being friendly and being nice. I am proud of this community. The Ruby, the language is [ Indiscernible ]. I created the language, and I put it on the Internet. The community was formed so that Ruby, the community, is a value. Providing benefit, [ Indiscernible ] and influencer challenge, so we need to seek community otherwise community members will go away. If you're bored by the Ruby language, you can go anywhere like Titan, whatever. You have tons of other, you know, attractive programming languages out there so that you are free to go out so that -- but we, we community members, need to form a community. This year, someone pointed out that not every shark [ Indiscernible ]. [ Laughter ] anyway, some kind of a shark. 
>> [ Laughter ] 
>> We have to keep swimming. We cannot stop or we will eventually fade away. Because Ruby does not have -- Ruby is not a shiny language despite our efforts to make Ruby better. Of course. [ Laughter ] there is something in the cycle -- pop cycle. Music comes and goes, but there's popularity. It started, then popularity goes up, but then it goes to high -- too high, too much expectation or illusion. Then when people notice it is over exaggerated, many people are disappointed about the music quality. So the popularity goes down to the trough of disillusionment, then people realize, okay. The past with disillusionment, but surely this has some value. Then we recognize the technology and the technology goes through the plateau of productivity. Probably we are in the trough of disillusionment. 2009 through 2020 or something, we are at the peak so that we were in the eighth or seventh in the index, programming popularity index. Than everybody used Ruby, and Ruby was pretty hot back then. 
>> [ Laughter ] 
>> But some people noticed there are some programming languages sometimes in the sermon or handles more traffic, heavy, heavy traffic websites. -- We are in the trough of disillusionment or the plateau of productivity. If we are at the bottom of the trough, we don't want to go up, so that is something that. [ Laughter ] 
>> [ Laughter ] 
>> If we are in the productivity past the trough, productivity has its benefits. This is the golden age. Anyway, we have not faded. People like me won't say anything. A new language comes every year, new frameworks come every year. It is fun. Being fun is pretty much important, and Ruby is a fun programming language. 
>> [ Laughter ] 
>> No new languages every year, no new framework every year. That is enough. 
>> [ Laughter ] 
>> We must -- I made an English. We must not be fragile. 
>> [ Laughter ] 
>> We must not be fragile. So people say Ruby is dead because of that, Ruby is not recommended. So what? [ Laughter ] 
>> [ Laughter ] 
>> So Ruby had its trials and errors. Ruby -- so twitter was the microblog, we said, with about 140 characters. That is nothing. That sound like a stupid idea. 
>> [ Laughter ] 
>> That blog, that every entry is limited to 140 characters. So many refuse to invest in the twitter because of that kind of silliness, but the people in this twitter tried, tried and ever led to form the twitter like adding retweet, many things so that twitters the best twitter became some kind of infrastructure, messaging infrastructure. So Ruby had their trials and errors, and it succeeded -- twitter succeeded, and it formed hundreds of millions of users or billions of users or something, so Ruby is not a performing this kind of traffic. Remember these days, twitter used Ruby one day, so that is kind of the triumph and ever. -- error. Remember, twitter is 1.8, so we implemented the near virtual machine after that, so that now Ruby is much faster, and I Ruby is -- now Ruby is more scalable, and Ruby is feature-rich so that what do we need more? Maybe we needed a story, concept, confluence is, -- confluences, the communication, the community, and then yes, we have those things. And we need more. The Ruby policy, Ruby's policy is never give up, so back in 1990 when Ruby was created, yeah, many people [ Indiscernible ]. We don't need more [ Indiscernible ] language. And I said no. 
>> [ Laughter ] 
>> Then a person sent me an email. Programming is not really required for scripting, so a scripting language for programming is just too much. I said no. 
>> [ Laughter ] 
>> And then some people claimed that a smaller programming language, smaller in syntax is better. Relatively, Ruby is more complex, you know? Ruby is natural but not simple. So I said no. 
>> [ Laughter ] 
>> Some people were calling Ruby slow, and it was slow back in say, one dates. -- date. But we have improved them a lot. So I said no. 
>> [ Laughter ] 
>> So more people said we should type in a long -- a location every few days. I said no. Never give up. 
>> [ Laughter ] 
>> We had other programming languages back in the 90s. We had tons of programming languages developed by individuals. These days, new programming languages are developed by organizations and companies, like Google or Apple, and those are languages from companies and individuals. So the 90s, most of the programming languages were from individuals, and that we had many, many programming languages out there in the 90s but very few survived. Everyone else went away. The best ways for survival is policing the community and not giving up and keep moving. So we have done great things as a community so that we as Ruby, we earn money. We hire developers that tart -- participate in the community. Be nice and be happy. Improve the productivity, and we provide the great tools like Ruby gems -- Trento for example, and we have the Ruby community, but what can we do more to survive? 
>> RubyGems for example, and  we had the Ruby community, but what can we do more to survive? I propose we lengthen us one step further. Attend one more conference. Make a new friend. Try new things. So okay, next person? [ Laughter ] shake hands. 
>> [ Attendees chatting, interacting ] 
>> So hey, during the conference and after you came back to share your idea, share your feelings to blogs, twitter, Facebook, medium, or whatever so these kind of things will be observable. We try our best to survive. We need to improve the language. For example, we are working on Ruby three, productivity. We have -- went through the performance, we improved the assisting tools. One step further, we will change the world. -- World to a better place, to a better future. Not yet. [ Laughter ] 
>> [ Laughter ] 
>> So our future [ Captioner disconnecter. Attempting reconnect. ] 
>> She was nine years older than me, and she invented [ Indiscernible ] before me. So Ruby is designed by community. I said definitely no. 
>> [ Laughter ] 
>> [ Laughter ] I'm not sure it's possible, but I'm vaguely thinking about the Ruby for project in 2025, so I have no concrete idea yet, but it is kind of the project for the future for the world without me. The future is uncertain, but after Ruby three, we will experiment with something for the future named Ruby for. We have to be prepared. We have to think and strive to make something good. -- Ruby four. confluence , So when we create value as a community so that when I say we, that includes you. Thank you. 
>> [ Applause ] 
>> Thank you. All right,  thank you everyone. That is it for now. At the end of the progress we have a more lengthy Q&A session with Matz,  so if you have any questions think about them, write them down, and save them for the last session at Thursday afternoon. RubyConf sessions start at 10:40.  
>> [ Music ] 
>> [ Music ] 
>> To senior to Ruby Dylan developers -- two senior Ruby developers were sitting down at lunch. Senior software engineers exchanging views. 
>> [ Laughter ] 
>> I feel like -- we never had that when we were lads. Be used to have to go back to first principles and working out -- work it out on our own. We had three years of sulfur education. Without a proper understanding of fundamentals, it's going to struggle with real work, and they have all these newfangled things. -- software education. Without a proper understanding of fundamentals, it's going to struggle with real work, and they have all these proper understanding of fundamentals, it's going to struggle with real work, and they have all these  newfangled things. Madness. How am I going to survive the modern workspace? Don't even get me started on how funky it is. It is torture, for heaven sex -- sakes. Secret handshake. 
>> [ Laughter ] 
>> So much of translation is in the name of our species. Wise man, it seems a little egotistical to me, but it is really true. I'm not seeing a great deal of wisdom between our two countries. 
>> [ Laughter ] 
>> Is it true for software engineers? No and the righteous mind, Jonathan hate introduces a metaphor for the human mind. This is what you think of you, the conscious mind with rational function and power. This is your emotion. Does anyone want to guess who is really in control? Our reasoning processes become brilliant at justifying our latent intuition. We think we seek objective truth like scientists. It is easier for the writer to say that was the direction they wanted to go in initially. Luigi has been off to fix a bug for senior engineer. he is new to the team and just coming up the state. 
>> Hey, I was wondering if I could get your view? 
>> Sure. 
>> [ Indiscernible ] 
>> All right, let's get stuck in here. 
>> He is looking through the code. It's like 700 lines long. It is a useful fix with changes to the code. It is not perfect long. It is a useful fix with changes to the code. It is not perfect  by any means, and it could have shipped more. 
>> A have shipped more. 
>> A  written test. I would not have taken this approach. Aha, there is a typo in the text description and some spaces! 
>> So, what do you think? Thomas not as it is. You told me to keep an eye on your PR side and quality, and this one needs work. There is a typo in commitment and you left some space in one needs work. There is a typo in commitment and you left some space in  the line. -- 
>> not as it is. You told me to keep an eye on your PR side and quality, and this one needs work. There is a typo in commitment and you left some space in it is. You told me to keep an eye on your PR side and quality, and this one needs work. There is a typo in commitment and you left some space in  the line. 
>> And all that remains is a comments. I'm going to need some very good justification for organizing the code. This feel like it should be done in a very different way to me. 
>> It's time I introduce myself. I'm Andy. I'm the smaller one on the right. I run a look conference, which is now six years in Britain. I write a newsletter about every -- Ruby every Monday morning. Let's talk about what we do. 
>> I spend most of my life [ Indiscernible ] 
>> Sounds good. 
>> But it's all wrong! 
>> Pushing bar buttons. 
>> It is not helping! Aaaah! 
>> This is our job. And mostly in our case, the rectangle is in someone else's hand. I mean we have never even seen it. We are really clever. For money of us, the direct control of the rectangle -- many of us, the direct control of the rectangle is out of us. Although I am the graduate method MediTECH -- mathematic. After the degree, I find myself switching to a massive enterprise company. I thought I was going to use my newly coating certified. I spent the next four years doing HR and communication. I ran multifunction and -- programs. Anticipated questions we might have an answer them. I finally left. I talked about writing a blog. I was thrown back to this world of control were I could hack away at my keyboard without the pressure those people felt. There's the senior engineer of the team. He started to maintain the code by reviewing every single line. Nadia is relatively new to the job, a little nervous. Not to be a little bit of a handful before her cup of coffee. 
>> [ Indiscernible ] 
>> Their approach? [ Indiscernible ] 
>> How dare you? Everybody knows that I should not be disturbed when I am thinking. My job is incredibly complex. Don't you realize you obliterated my [ Indiscernible ]? 
>> I must be patient. But the name of this program is the games these amateurs play. It turned out this was actually. This book was written in 1957. This health book -- self-help book [ Indiscernible ]. You can say it changed the worldview of programming. The central conceit is that we inhabit one of three [ Indiscernible ]. Parent, adult, and child. Many interactions in our lives in these -- are in one of these states. Is a psychological reality be temporarily experience. For whatever reason, we might find ourselves as the parent which can be the controlling, scolding persona as well as caring and nurturing. We might in times of stress fall back on these models of behavior. The child in the modern does not mean adorable the -- adorable. It is represent a reality and how you feel. It's also a place of joy, but it is still discipline., Completing the model, the adult. The idea is your adult is the opposite. When we are talking about the foundations of analysis, [ Indiscernible ]. This concept of a drama triangle is another useful way of thinking about communication. The alternative set of roles I can be examined alongside parent and child, and this model competition for the coveted victim role. By achieving the victim role, you end up blaming others instead of yourself for the current situation, hence the emotional payoff. These games tend not to be invoked, but they're going to hold them up from full life games like alcoholic or romantic relationships, but psychologically just -- psychologist have a sense of humor. Now your first instinct might be to look at these and get stuck in the terminology. It can be 
>> The fact that you can be playful and childish can be damning. When we best understand these models in terms of the roles, it is transactional. The most important part about the transitions between the roles is communication. Now you're probably thinking those are some nice circles, Andy. Thanks so much. What does that have to do with me? So the main game being played with our hero is now I've got you you son of a. Of reviewer holding a child hostage. Hamstring the whole [ Indiscernible ]. Incidentally, this is a comment I received for real. My specific issue with this comment is other evidence was required. The only evidence against the emotional viewer. Things don't have to be negative, or being summaries parent can be a positive thing. In this case, knotty approaches as a -- an adult. But a similar pattern now that I've got. Oscars petulant child is given free and righteous rain could kickoff. 
>> How dare you! 
>> So this interaction, Oscar initially sets him up as the rescuer, the hero. [ Indiscernible ] the transition of roles into victim [ Indiscernible ] emotion felt. The roles are reversed, and Oscar is self righteous. Nadia [ Indiscernible ]. Surging righteous anger is probably a bad sign. Child experience of wielding that powerful emotion, and apparent experience, punishment all at once. 
>> Neufeld creature, I will not be bullied by you! 
>> In this case, they gave is participants exercising [ Indiscernible ] while tossing to everybody else. In terms of the drama triangle, both participants are the victim. [ Indiscernible ] but this is not a new idea. It has been noted in writings in the past. [ Captioner 

>>> We used to live in one room, all 36 of us, no furniture. You were lucky to have a room, we had to live in the quarter. -- We used to live in an old water tank. We woke up every morning -- when I say house it was a hole in the ground -- it was a house to us. We were evicted from our hole in the ground. We had to live in a lake.
>> You had a Lake, we lived in a shoe box in the middle of the road. 
>> Cardboard box? You're lucky. We lived three months in a rolled up newspaper. We had to get up in the morning and go to work and -- and we got home, our dad --
>> Look, we used to have to get out of the lake at 3 AM, work 20 hours a day, come home and dad was going to beat us around the neck. 
>> We had it tough. We still have to get around in the middle of the night and -- and -- and will we got home our dad -- 
>> Right. I had to get up in the morning at 10 PM half an hour before I went to bed, eat poison, work 29 hours a day, and when I get home, my dad would kill us and sing hallelujah. 
>> Are you trying to tell the young people of today, they won't believe you. 
>> I recognize too much of myself and that. -- You have seen these games. You might play these games. They are so predictable. There was a book that was written down and coded. You might be thinking of specific conversations that you have over and over and over and over. Andy, you say, Andy, I hear you say, -- [ indiscernible - low volume ]  the good news is, you are already on your way. Like Neo in the matrix, you have seen beneath the surface of a deeper experience underneath. By listening to this today, you're beginning to believe. This is what happened to me. I had they are P and this was -- I had therapy and this was introduced to me, the relationships between parents and spouses and friends. The awareness of the game and role that we plan them was enough for me to -- everywhere. Your brain does not know this because there is no boundary. You see these games at work and in personal relationships. What else is there? Perhaps, nothing to me is -- in Facebook culture as --. Shift the feature, fix the bug and JavaScript. It is surprisingly therapeutic. We are not encouraged in our industry to take precious moments unless [ indiscernible ]  [ laughter ] so, given that you are now aware that these games are happening to you or with you you have a choice as to whether you want to can they to continue to produce pay. You want to be more like this. To take five minutes the next time you rush into the easy embrace of a familiar conflict or mindset, and stop. I am giving you permission to take a minute for yourself. Now, over Christmas last year I read a terrible book, genuinely, do not buy this book. It is the worst kind of stretched out self-help bull crap, it is my success help guru nonsense. Do not buy this book. Are we clear. The book is terrible. But the generic advice that is none -- is good. Take time to build mental health habits every day. In my case, I sneak out of bed in the morning before my wife and kids wake up which is quite difficult, I am not a morning person, although given my time zone today it was much easier this morning. I do up to 10 minutes of meditation and I do five minutes of journaling, like it is just a brain dump from the previous day, not for anyone or even for me. It is long enough to get perspective on any feelings or conflicts are things that happened the day before. These two things, time, have had a tremendous effect on my overall calmness throughout the day. Which lets me be a better adult when the difficult feelings or conflicts arise. What is terrific is that these exercises have historical president. Little things that I wake up and do are guided by 2000-year-old principles. The Stoics had tons of rational troubles. So we are more often threatened than hurt and we suffer more from imagination than reality. If that does not describe the search of victimhood I don't know what does. The -- Roman Emperor had the solution, you have power over your own mind, not outside events. Realize this and you will find strength. Only looking at ourselves can we break out the irrational damaging games. This is advice from 6000 years ago. And if you look for the cliff notes, it is being examined in 22 minutes on NBC which is where I heard the last quote. But genuinely, pick up a copy of meditations, it is readable. Thinking about this stuff and understanding the game, and each party's motivation, lets your adult be a better arbiter of the impulses that you get from a child or parent. I want to be clear, this is not about removing emotions and making you a motionless. It is about understanding your internal voices and seeing the influence as to how you behave and take care of yourself. If you maintain an adult psychological reality you don't need to chase the role of victim. You can abandon the drama triangle altogether. You will always have emotional reactions. And you should because you are not a robot. You should be able to examine them and do less harm to yourself and others. Not necessarily in the moment, every time, but often. Afterwards. Humans have grand visions of our own importance and that is true of suffering. We view ourselves as rational, making measured arguments about politics, morals, spaces, but we are not rational. Being aware of these things makes you a better collaborator, teammate, manager, partner, parent and human. Code is rational. Software can be right. So many of us lean toward writing software because we thought this. And the humid -- the human bit is too hard. Engaging in the thought that we are more rational than other people is a fallacy. Software is a team sport. It is made by people. Watch out for these games everywhere, examine your overpowering feelings and space will take care of itself and may you lead a normal life. [ applause ]  

>>> [ music ]  [ applause ]  

>>> [ silence ]  

>>> Hello, everybody, I will go ahead and get it started. My name is Beth Haubert and this talk is called cats, the musical , outgrowth it song Meow-ificaion.  I am excited to be here today. So, I have a warning, I give it at the beginning of the talk that within the next 20 or 30 minutes you will likely encounter some singing, too many cat gifts and silliness. Be prepared. Let's get started. So, I don't remember what my bio says on the website, but I have changes, life changes that have happened and it is out of date so I was a software in Samara -- engineer working in Nebraska and now I am at -- in San Francisco which I am excited about. So if you work at -- and I have not met you yet please come and say hello. And let's get started. So, I have been told by a few people that one of my strengths is thinking outside the box. As I like to call it, being really good at coming up with stupid ideas. So, a few of my ideas have included a social media website for your --, okay, maybe I should stop there. -- A type of drink that is supposed to be healthy but does healthiness outweigh the alcohol? I don't know. Another idea, I don't have a name for it but is -- but for future -- that you release at work. And then, my favorite is -- a US-based antisocial network for your cat. And I actually built and released this to a small market in Omaha and it still exists, and you can go there and see it. So, life change subjects but a real event. If you are familiar with game of thrones -- okay, most popular TV show now. I need to give you background on me, first. This is me and my husband, we were married in a bar to the disappointment of our parents. That is not relevant. These are our cats, and this is a professional photograph of my cats. This is me and my husband on Halloween a few years ago. We were really into game of thrones. Yes. So, you can barely tell the difference, thank you. You know. So, if you are wondering where I am going with this, I am going to talk about that. So I will play you the game of thrones theme song right now. I hope you can get a little louder. Okay? [ music ]  I'm sure most of you are familiar with that. So, you might have noticed it doesn't have any lyrics. Which I think is a problem. So, one night I was watching game of thrones and I just kind of started meowing along. And that is what this talk comes from. So, you are all familiar with the game of thrones theme song, you know what a meowing sounds like. Meow. We will do something together. We are going to meow the game of thrones theme song, I will start and you will join in. Are you ready? [ meowing in tune of game of game of thrones ]  Cool. Nice job, everybody. Thank you. Yes. Give yourself a round of applause. You probably just set a world record for the number of people meowing in a room. So Meowifier, the application  is one idea and a long line of bad ideas that I come up with over the years. So but it also seems like an interesting technology programming problem to solve. I finally said, what the heck and I built it. So I exactly does it work? Simply, you upload a song audio file and Meowifier outputs a new file with the song  sung by a cat. I wish I could say there is such a thing as a cat choir. There is not. I googled it. It was all up to me to figure out. So yes, Google is great. And I came across some very famous cats. I call this my favorite. [ music ] I would like to finish that video but I don't have enough time. I also discovered, I'm not the first person to come up with this idea. This is a cat Oregon. -- Cat Oregon. There is different thing -- the story in the 16th century -- century talked about a cat organ being  played by a bear, are all historians trustworthy? I'm not sure. But throughout the years, people have mentioned cat organ so the consensus is that it is  never something that has been built. Cats don't meow in a fixed pitch. Until now, that is. So, we will do this, we will dive right in. And what I decided is that I have big challenges. I had no idea how to build this thing so I decided I would make some rolls up for myself. And, I had one thing going for me, I had practical design patterns in Ruby. If you are not familiar, I hope all of you are familiar, if you have not read the book, please read it. So, thanks to Sandy I needed to make my process stupid, and I also decided based on my experience with my legacy code at my last job that I wanted that this application to be 100% test driven unlike the legacy code at my last job. So, I have these standards set in place and now it is time to start. So, I have three big challenges. And, the first one is finding a way to obtain the notes of only the melody from songs audio file. That is a big one. And then correcting the meow link to match the melody. And then creating the library of meows. So, let's get started. The melody. So, it is easy for a human, especially one with musical training to pick up the melody of a song. So the melody if you're not a musician it is the principal part of the song. Like every song you hear on TV or radio is polyphonic, it means there is one -- more than one note. If you listen to Bohemian Rhapsody, the melody would be the part that the lead singer is singing. So, the melody is this part. It is like this -- that is the melody. But, there is harmony and other parts and I don't want all those things. I just want the melody. So what did I do? Compared to a human braid, a computer is unintelligent and we have to tell them what to do. So writing an algorithm that the computer can understand is difficult. And maybe you wonder if I wrote one. I did not even try. I did what most programmers do and googled until I found something that I thought would work. And it was so difficult to find but I finally did find something. The first tool I found was a tool called sonic API. It offers professional grade audio technology and high-quality world class algorithms and it was free up to a certain point. So I tried it. So I have this simple -- and inside the class I have a -- so all I needed to do was pass the proper -- through -- and the song file might be on -- all in that good stuff and it was supposed to extract the melody. This is an example and I realize how small it is. This is an example of what the response looks like except imagine literally hundreds if not thousands of lines long. This is just a collection. And this actually is the first few notes of the game of thrones King -- theme song. This is what the information has. Four pieces of data per note and this matches the pitch of the note and I will get into MIDI later, but -- on a keyboard. I had to round the note up or down. So, this MIDI pitch would be rounded up. Let's see what that gets us. So, MIDI which is short for mystical instrument digital interface, it is a standard so that all electronic musical instruments -- adhere to the same role and can medicate with each other. So 36 lances on this and this is to it -- this is two octaves down from middle C. This is what it looks like on a keyboard. You may see me playing the piano before the keynote, that was me. I like the piano a lot. I know nothing about electronic music. This was brand-new to me. What I ended up doing is like I am lucky, because MIDI is standardized. I went ahead and made constants in my note converter. This comes into play after I -- so here again is the MIDI, note 36. And, time for a break. We have been talking for a little while. You aren't scratching. There you go. We will move on. There is a -- method here, a note method, and what it does is adds the standard pitch to each line in my collection using those constants that I showed you. And I am talking about this here. What this does, this method, it adds the note to the end here. Now, instead of this really long collection of four pieces of data per line there are five. So, what is next? If you are looking at this, you might think, okay, we have the MIDI pitch down, what is next? Time and duration? You would be correct. So, I need to correct the meow length to match the length of the note in the melody. The melody will have notes of varying lengths. Ink back to Bohemian Rhapsody. Some notes are ABA whole second or a quarter of a second. -- Some notes are longer and some are shorter. But I can't have a meow folder with files of every length. So, instead, I need a tool that can cut or extend a meow. And, as a programmer I am like -- and I found some googling and found a great tool that I am sure a lot of you use, it is called -- and it has been around for two gate -- has been around for two decades but there are too many options like I spent an inordinate amount of time googling how to do it. But you know what? I finally got it working. It took a long time so this method is embarrassing because it is very long and messy and I did not re-factor it and it has been two years. Like I said, it took a long time to write and I am done. But let me walk you through it. Is what happens as we -- the first song and remember the collection and -- so we put that in, and at this point, I need to tell you there is a library of meows in my application and we will talk in depth about that soon but all you need to know now is there are 88 short audio files each with one meow in a different pitch. So, this is part of my code that creates the meow. And this first piece of logic shortens the meow file while the other one lengthens it. And, short notes are simple. When the length of the note is shorter than the library file I just make a copy of the file and trim off the end of the file and get the correct length. It looks a little something like this. So if the duration of the note is less than the links note you just make it adjusted. I tournament down, and actually that doesn't match, imagine that they are both the same. You guys have a great imagination, right? So, you can do this easily -- and it gets a little more difficult with the longer notes. And there are so many ways to do this but the first way and the way I will show you is what I ended up doing was if the length of the extracted note is longer than the length of the meow in my library file I duplicate the meow file and still it is longer than the extracted note and I combined them to make the audio file and shorten it to match the length of the -- so I will show you guys. So this is the logic for the long note. These are my private methods. It is actually one of the most interesting parts of when I was building the application and probably the first part to go when I agree factor because I decided to do this another way. But currently, the note length, it is 2.4 seconds and the file is one second long, so first I find the number of loops. I take simple math. The note length divided by the file length. And then I use this method which returns the smallest integer greater than or equal to the flow which is three. And then I use -- and I loop my file three times. I combine it. And then, I crop it and save it. And so, that is one way to do it right? I guess, this is the gift, it will wiggle and it is supposed to be full-screen. That's okay. The other way that I thought about doing this is what if instead, so now, my meows are, go back here, so there is actually three meows when there is only supposed to be one. So, the next step would be to cut out the middle of my meow and then decide -- divided in half and put basically the middle of the meow and extended until it is the right length so you have the beginning, multiple middles and the end. Currently that is not how it works. But, all the files that I make get stored and this last part is the step where I combine all of the files together in the song folder. I don't expect you to read through all of this but it works. Trust me. Final words, right? This last part, this is the last, you know, issue I had to solve, my meow library. I needed a multi-octave library of meows. And that is a lot of meows and very few cats meow in base, baritone. So, I already googled, there is no such thing as a cat choir. I had to figure out my own custom meow library using interesting tactics. The first one started with me sitting at my piano playing a note and trying to sing it. And I am flat and my piano is a bit flat because I need to get it tuned. So, that was not cutting it. And okay, what's next? I got an app on my phone and saying into my laptop microphone with the app online. Okay, I will do this. Meow. Meow. Okay, it will take a while. I can't get it on the first time. I am always flat. I promise you. Always let. I got half of the song. And then I realized I was not cutting it. But, it was enough for proof of concept. I only recorded five notes but, I knew a song that had five notes in it. [ meowing happy birthday ] So, my test passed, it worked. Obviously, this would not cut it. I needed more than five notes. So okay, back to the Internet. And like I said, I like taking the easy road when I can. So, I finally found a few octaves of an autotune man meowing on a website. And here is that first library. So, if you remember, a keyboard has 88 notes. This is not 88 notes here. The number of files in this free collection only spanned about four octaves. I was like, I will give this a shot. It means I don't need to make my own library. But I had an issue, what would I do if one of the analyzed notes fell outside the range of these notes, here. So I had to write some workarounds like you do. So I had to do a modifier and if the note is to lower high to fit into the range of notes that I had I adjust the octave. So, if it is a really low note but I have the octave higher, I would adjusted up. So, okay, that works. There was another problem in the library that I found. Each note has a pitch and octave destination and some of these notes have hyphens. That actually is the sharp designator. Well, if you remember, I wrote my constant and they used the sharp designator so I decided to write another method to Padgett and so I don't need to rename every file in my meow folder. I'm lazy, and let's see what that gets us. [ meows ] Okay? He's in tune. That is what I can say for that. I took all that time adjusting my app to work with the library but I was not happy with it. So, I bit the bullet and found some meows online and decided to autotune 88 meows. And make my own cat library. And so now, I have a cat library, a meow library spanning almost the entire cure board. What that means is that this method that I wrote to format my notes, I can get rid of that. And, this octave modifier that I wrote to modify the octave, I can get rid of that. So, cleaning up code, I love that. I think everyone likes to delete code because now I have a full library of notes. Like we better. So, that was my big problem, right, now it is the moment you have all been waiting for. But first, -- this is the game of thrones theme song. Just to remind you. In case you forgot. And this is what we are going for, okay? [ singing meows to game of thrones theme of thrones theme song ]  Can you turn it up a little bit? A little bit better? This goes on five minutes. So, I had some problems. This does not sound like the game of thrones theme song. Am I wrong? So, it turns out that the melody, it was not actually world-class, so, I would try it again. So, I found something called melodia. This guy had written -- about melody extraction. And finally, he had free software and tools and I was like yes, I will do this. I had to find a release form so the University where he did his research would release the software to me. This is the release form. [ laughter ] I am not sure if they ever read it. Like, they actually sent me the software. And it was actually really simple. This is my command in the command line and I was just testing it out and playing around with it and it was so awesome. Yes. So, I have it saved to my desktop. The difference between this software and the previous one was this one has a MIDI file. So I need a new class that can translate MIDI file. So before I write this class, I will see what it sounds like. I go to some free like MIDI analyzer online. And it turns out there might be issues. [ piano music ] So, this is actually melodia -- so, this is jazz on the far left, and the blue is the frequency that the computer estimates the melody to be and the color red is the melody. If you can see, it is good at jazz and bad at pop and offer. Which is really sad for me. Because it turns out it wasn't even -- to add it. So, I am like, well, I am not happy, it's time to go back to --, the first one. And -- [ meows ] perfect? No. Far from perfect. So, it is a side project, right? I'm not getting paid, there is no today. I will keep working on it. I have ideas. What's next? I still have not written a client site for it. I want to find a better melody. What else can I do in the meantime? I could pick it. Slightly. We have probably all heard of shazam? It is a song identifier app, right? If I took a reverse melody analyzer to figure out what song a user has uploaded and was a find the song, I look for a MIDI version of the song. And then, turn that into a a meowified version. I have not written that yet. That is the next thing on the docket.  Next time maybe I will be done. Maybe I won't. In the meantime, like, you know, it is what it is. I had a great time talking about it and building it and sharing all these cat things with you. You can find my -- and I will -- and my handle is -- and with that, I am done, thank you so much for meowing with me. And I also have pictures if anyone is interested. 

>>> [ silence ]  

>>> [ music ]  

>>> [ silence ] 

>>> [ captioners transitioning ] 
>> Hello. All right. Well come. Please come and. -- come in.
>> So let me see which one I will pick. During prohibition, the gold room became a secret nightclub with Jen -- gin. A celebrity found a hole in the wall where paparazzi was taking picture. There was a door in which they could run away from the police. 
>> This is really -- silly little thing. We are going to play family feud. Let's have our two teams come up to the stage. Give them a round of applause.
>>[Music] 
>> This is a big shout out to the sound guys. They just found this music two seconds ago.
>>[Music] 
>> I feel like I should dance. So the rules are, basically you answer questions and they have an opportunity to win. And they have the moral satisfaction of winning. That sounds good. So let's have the team captains come up first.
>> You have to think fast. 
>> Okay.
>> Who are you?
>> My name is Aaron.
>> [ Applause ] 
>> So the first game we are going to play today is, the login game. I think it is cut off at the top. I think we have serious problems. Which program language is different?
>> McKinsey?
>> What do you think is one of the answer when you survey people, what did they give to this question?
>> Job up. That's what Java.
>> You are so correct.
>> I think you are doing it wrong. 
>> [Laughter] 
>> Ernie is keeping me honest. So normally you start at the end. And we are not going to do that anymore so we are going to start with Ernie. 
>> We are going to defer.
>> We seem to be making rules up as we go along. I love it. 
>> [Laughter] 
>> So we have been deferred to Aaron's team. So we will start with Eileen. We are trying to clear the board and you are trying to answer the questions. If you get three strikes a goes to the other team. 
>> Do I have to do all of them? 
>> No.
>> My name is Eileen. 
>> Hello Eileen.
>> What do you think is the answer?
>> Fortran.
>> We surveyed people on twitter. It is a legitimate these days. [Laughter] 
>> Can I call a friend?
>>[Laughter] 
>> That is not part of the game.
>> My name is Aaron. I am going to choose -- what was the question?
>> What program language is different from Ruby ?
>> Objective speed.
>> You guys are so bad at this. 
>> It is different from Ruby .
>> My name is Justin. Hello everyone. This is for the third strike. So it could be a quick game.
>> I think it is Haskel.
>> [ Applause ] 
>> You are still alive but barely clinging. 
>> Nadia.
>> Yes?
>> My name is Nadia.
>> [ Applause ] 
>> Go.
>> That is not correct. And I did not make up these answers. We went to twitter. So we will go to the next team.
>> My name is Ernie by the way.
>> [ Applause ] 
>> We are going to go with Cee.
>> [ Applause ] 
>> The number one answer, Haskel. The number one -- the second one is Brain.
>>[Laughter] 
>> And the number five answer was Pro Log and number six was Assembler. And number seven was Closure.
>> The second person on your team please, on up -- come on up.
>> We have Eileen.
>> [ Applause ] 
>> You have to stand behind me.
>> This is not working. [Laughter] 
>> I allowed for that.
>> [Laughter] 
>> The second game is, if Ruby  was an animal what would it be? 
>> Eileen, what do you think? People were surveyed what do you think is the answer?
>> Any animal.
>> A snake.
>> [Laughter] 
>> Do you mean a Python?
>> [Laughter] 
>> Just a snake? A rattlesnake? A garter snake?
>> Not a single person said, snake.
>> Ernie? 
>> Ernie wants to say, Fox.
>> Absolutely.
>> [ Applause ] 
>> Eileen you will get another shot.
>> I think we should go to Aaron, because Eileen needs a moment. [Laughter] 
>> So people surveyed Emma what kind of animal is Ruby  -- so people surveyed, what kind of animal is Ruby ?
>> What about a dog?
>> It is the number one answer. 
>> I need an answer.
>> Rabbit.
>> Let's go back to Eileen. One strike, Eileen.
>> Squirrel.
>> Do not come onto me because I did not write this. So Aaron? It is all up to you. 
>> We are going to go with lion. 
>> Good answer.
>> All right. You are hanging on by a thread.
>> Only one person on the twitter thread said lien.
>> These are people who are on the Internet. 
>> I need an answer, please.
>> Can we say bird?
>> I am not close to popular opinion on anything.
>> That is your third strike.
>> Do we only get one answer?
>> I do not make up the game. Ernie, you are making up a new game right now. [Laughter] 
>> We are going to go with the unicorn. 
>> Interesting. And unicorn is up there.
>> [ Applause ] 
>> That was all Sam.
>> Despite the fact that it is not a real animal, people are so weird.
>> I know.
>> I think we are doing great. Usually at this time during the show they will do an interview. But we are not going to do that. So let's keep going. We have five games. So it is two [Indiscernible ] . 
>> Now we are changing the protocol.
>> Thank you, audience. 
>> Number five on the list. Was koala.[Laughter] 
>> Number six was the platypus.
>> I would've thought dark -- duck would have been higher. 
>> We have to think like Sam.
>> We are going to do the Slap. Are you ready?
>> Name a popular gem.
>> Let's have a look.
>>[Laughter] 
>> Clearly deferring is the only thing that works.
>> [Laughter] 
>> We want to defer.
>> [Laughter] 
>> They are on to us. 
>> Sam, you have not talked yet. That is a rarity for this game.
>> Hello everyone I am Sam.
>> Hello Sam.
>> I am going to guess, Aspect.
>> It is on the list. 
>> Moving on. I do not remember what they do. 
>> What about know, -- Noka Geri.
>> Very good. [ Applause ] 
>> Spirit a -- Spira.
>> Valerie?
>> Name a popular gem other than Rails. and technically it did not say Ruby  Rail.
>> I need an answer. 
>> HTV party.
>> [Indiscernible ] 
>> Thank you Ernie. You guys are still alive but barely.
>> Many test. -- Mini test.
>> I think it is on the list. 
>> You are still alive.
>> What would random people on twitter answer?
>> Because remember this is a twitter pole -- poll.
>> Flash Factory Girl . 
>> now we go back over to Aaron's team.
>> We have three answers still on the board.
>> You just have to answer one straightaway.
>> Sinatra.
>>[Laughter] 
>> To be honest I was surprised.
>> Let's look at number two. Which is Surprise. And number six is -- and you all miss this one -- Rake.
>>[Laughter] 
>> People on the Internet, they have so many wacky ideas.
>> They were so bad.
>> Technically, Aaron's team one because it was three to one.
>> You guys do not have anything else to do so we are going to keep playing. Maybe we will have a special, go for everything around.
>> [Laughter] 
>> Send up your new representative.
>> Hello Sam. Where are you from?
>> United Kingdom.
>> Where are you from again?
>> Rumsey. 
>> And who are you?
>> Justin.
>> And Justin where are you from? 
>> Michigan.
>> So you are in the thumb area?
>> Very good.
>> Is this good enough, Aaron? 
>> Very get.
>> Move on to number four. Which [Indiscernible ]  method is the hardest to say?
>> [Laughter] 
>> Group By.
>> Wrong.
>> Do you want to defer?
>> Whose turn is it?
>> We are with Nadia.
>> I came up with this question because it is difficult. What is an actual answer to this? Are we thinking it is weird? So you have to think out what the audience means. Nadia?
>> Inject.
>> That is correct.
>> Map.
>> Very good.
>> Aaron?
>> I do agree.
>> Some people said interval method and that is it. [Laughter] 
>> Find. 
>> Wrong.
>> I agree but neither is Map
>> Do aliases count?
>>[Laughter] 
>> Nadia.
>> We do have Ruby.
>> [Laughter] 
>> Select.
>> Wrong.
>> You have two strikes. This is the kind of questions we always get when we have a meeting. 
>> [Laughter] 
>> Eileen.
>> Zip.
>> Very good. It is definitely up there.
>> Only 4% of the people were right. [Laughter] 
>> Aaron ?
>> Sort By.
>> Wrong.
>> I think it is true and the survey is wrong.
>> [Laughter] 
>> I cannot wait for the winner takes all round.
>> Sam.
>> Each With Index. 
>> He got a point, Aaron. 
>> [ Applause ] 
>> The number one answer, Lazy.
>> That is pretty spot on.
>> Number five was, with each object.
>> I almost removed this because of a technicality. But technically it was in the survey so I had to leave it in. And we also have Partition. 
>> What is partition?
>> It splits it in half. 
>> We only have 30 seconds left, so we do not have time to play another game. Please give the players a round of applause.
>> Thank you so much for struggling through this. I hope you all had fun I want everyone to have fun. Goodbye.
>> Music playing. 
>>[Music] 
>> [ Captioner standing by waiting for the session to reconvene. Thank you ]
>> Okay, can you hear me? In the back? Okay we can get started because we are a little late. This session, let me see what is in here. So this our we are going to talk about API. Who is a creator of API? Who is a web developer? Who develops a website? That is at least half. So you to -- two are API creators. Who has written a Ruby class or Java  class? Let me see the hands go up. You are also considered a API 